#!/usr/bin/env bash
# Script to install and configure HAProxy on a new Ubuntu machine

# Variables for server IP addresses and hostnames
WEB01_IP="54.165.77.76"
WEB02_IP="34.239.248.129"
WEB01_HOSTNAME="516317-web-01"
WEB02_HOSTNAME="516317-web-02"

# Update package list and install HAProxy
sudo apt-get -y update
sudo apt-get install -y haproxy

# Configure HAProxy
sudo tee /etc/haproxy/haproxy.cfg > /dev/null <<EOL
global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

backend web-backend
    balance roundrobin
    server $WEB01_HOSTNAME $WEB01_IP:80 check
    server $WEB02_HOSTNAME $WEB02_IP:80 check

frontend http
    bind *:80
    mode http
    default_backend web-backend
EOL

# Start HAProxy service
sudo service haproxy start

# Ensure HAProxy is enabled to start at boot
sudo systemctl enable haproxy

# Check if HAProxy is running correctly
if systemctl is-active --quiet haproxy; then
    echo "HAProxy installed and configured successfully."
else
    echo "HAProxy failed to start. Check the configuration and try again."
fi

# Set hostnames for web servers
echo "Setting hostnames for web servers..."

# Configure hostname for web-01
echo "$WEB01_IP $WEB01_HOSTNAME" | sudo tee -a /etc/hosts > /dev/null

# Configure hostname for web-02
echo "$WEB02_IP $WEB02_HOSTNAME" | sudo tee -a /etc/hosts > /dev/null

echo "Hostnames configured: $WEB01_HOSTNAME and $WEB02_HOSTNAME"
